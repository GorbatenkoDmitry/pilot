
<?xml version="1.0" encoding="UTF-8" ?>
///вставили дроктайп для мэппера взяв его с сайта майбатиса
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
///Теперь же нам надо описать сам маппер
///Открываем тег маппер и для маппера указываем его нейм спейс(ссылка на тот интерфейс репозитория, который мы маппим 
<mapper namespace="com.example.tasklist.repository.TaskRepository">
///Теперь напишем резултмэп 
        ///это такой тэг,которыйпозволяет строки перерводить в объекты
        ///айди отражает название данного резулт мэп , а тип указываем наш тип объекта таск и автомэппинг фолс для избежаения определенных ошибок(когда у нас все поля мэппятся)
        
    <resultMap id="TaskResultMap" type="com.example.tasklist.domain.task.Task" autoMapping="false">

            ///теперь вручную прописываем как связываются колонки в таблцие в селектах и как уже в самом объекте .
            ///связыаем колонку айди и поле таск айди
            ///*не забываем, что в юзер репозитории импл мы использовали так называемые алиасы (Псевдоним (alias)), поэтому не просто айди,  а таск айди так далее
        <id property="id" column="task_id"/>
        <result property="title" column="task_title"/>
        <result property="description" column="task_description"/>
        <result property="expirationDate" column="task_expiration_date"/>
        <result property="status" column="task_status"/>
    </resultMap>
///теперь опишем все необходимые селекты, так как раз мы делаем все через майбатис и реализация интерфейс не нужна
        ///айди должен соответсвовать названию метода в интерфейсе таск интерейс
    <select id="findById" resultMap="TaskResultMap">
        SELECT t.id as task_id,
        t.title as task_title,
        t.description as task_description,
        t.expiration_date as task_expiration_date,
        t.status as task_status
        FROM tasks t
            ///исключение и отличие от таск интерфейс импл то что здесь вместо вопросика для доступа к переданным параметрам нужно написать решетку и параметр
        WHERE t.id = #{id}
    </select>

    <select id="findAllByUserId" resultMap="TaskResultMap">
        SELECT t.id as task_id,
        t.title as task_title,
        t.description as task_description,
        t.expiration_date as task_expiration_date,
        t.status as task_status
        FROM tasks t
        JOIN users_tasks ut on t.id = ut.task_id
        WHERE ut.user_id = #{userId}
    </select>
///тут уже метод не селект, а инсерт,то есть метод который будет вносить данные , нужно так же указать кей проперти, который является ключом в бд
        /// и кей колумн, который является ключом в объекте
        //если мы хотим что бы вставилось айди при вставке в бд, то надо использовать юсгенерейтедкейс (все будет ниже)
    <insert id="assignToUserById">
        INSERT INTO users_tasks (task_id, user_id)
        VALUES (#{taskId}, #{userId})
    </insert>

    <update id="update">
        UPDATE tasks
        SET title = #{title},
        description = #{description},
        expiration_date = #{expirationDate},
        status = #{status}
        WHERE id = #{id}
    </update>
///тут уже метод не селект, а инсерт,то есть метод который будет вносить данные , нужно так же указать кей проперти, который является ключом в бд
        /// и кей колумн, который является ключом в объекте
        //если мы хотим что бы вставилось айди при вставке в бд, то надо использовать юсгенерейтедкейс

    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO tasks (title, description, expiration_date, status)
        VALUES (#{title}, #{description}, #{expirationDate}, #{status})
    </insert>

    <delete id="delete">
        DELETE FROM tasks
        WHERE id = #{id}
    </delete>

</mapper>
